//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tobloggo.MyDBServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoogleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StripeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Authorization {
            get {
                return this.AuthorizationField;
            }
            set {
                if ((this.AuthorizationField.Equals(value) != true)) {
                    this.AuthorizationField = value;
                    this.RaisePropertyChanged("Authorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoogleId {
            get {
                return this.GoogleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GoogleIdField, value) != true)) {
                    this.GoogleIdField = value;
                    this.RaisePropertyChanged("GoogleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IV {
            get {
                return this.IVField;
            }
            set {
                if ((object.ReferenceEquals(this.IVField, value) != true)) {
                    this.IVField = value;
                    this.RaisePropertyChanged("IV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfImage {
            get {
                return this.ProfImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfImageField, value) != true)) {
                    this.ProfImageField = value;
                    this.RaisePropertyChanged("ProfImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StripeId {
            get {
                return this.StripeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StripeIdField, value) != true)) {
                    this.StripeIdField = value;
                    this.RaisePropertyChanged("StripeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoldAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoldAmount {
            get {
                return this.SoldAmountField;
            }
            set {
                if ((this.SoldAmountField.Equals(value) != true)) {
                    this.SoldAmountField = value;
                    this.RaisePropertyChanged("SoldAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchasedTicket", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class PurchasedTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDBServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Tobloggo.MyDBServiceReference.CompositeType GetDataUsingDataContract(Tobloggo.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Tobloggo.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        int CreateUser(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrFindSingleGoogleUser", ReplyAction="http://tempuri.org/IService1/CreateOrFindSingleGoogleUserResponse")]
        int CreateOrFindSingleGoogleUser(string googleId, string name, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrFindSingleGoogleUser", ReplyAction="http://tempuri.org/IService1/CreateOrFindSingleGoogleUserResponse")]
        System.Threading.Tasks.Task<int> CreateOrFindSingleGoogleUserAsync(string googleId, string name, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        int UpdateUser(Tobloggo.MyDBServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(Tobloggo.MyDBServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        Tobloggo.MyDBServiceReference.User GetUserById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByEmail", ReplyAction="http://tempuri.org/IService1/GetUserByEmailResponse")]
        Tobloggo.MyDBServiceReference.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByEmail", ReplyAction="http://tempuri.org/IService1/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        Tobloggo.MyDBServiceReference.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLocations", ReplyAction="http://tempuri.org/IService1/GetAllLocationsResponse")]
        Tobloggo.MyDBServiceReference.Location[] GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLocations", ReplyAction="http://tempuri.org/IService1/GetAllLocationsResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLocationsByUserId", ReplyAction="http://tempuri.org/IService1/GetAllLocationsByUserIdResponse")]
        Tobloggo.MyDBServiceReference.Location[] GetAllLocationsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLocationsByUserId", ReplyAction="http://tempuri.org/IService1/GetAllLocationsByUserIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllLocationsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAvailLocations", ReplyAction="http://tempuri.org/IService1/GetAllAvailLocationsResponse")]
        Tobloggo.MyDBServiceReference.Location[] GetAllAvailLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAvailLocations", ReplyAction="http://tempuri.org/IService1/GetAllAvailLocationsResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllAvailLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTypeLocations", ReplyAction="http://tempuri.org/IService1/GetAllTypeLocationsResponse")]
        Tobloggo.MyDBServiceReference.Location[] GetAllTypeLocations(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTypeLocations", ReplyAction="http://tempuri.org/IService1/GetAllTypeLocationsResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllTypeLocationsAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateLocation", ReplyAction="http://tempuri.org/IService1/CreateLocationResponse")]
        int CreateLocation(string name, string address, string details, string type, string images, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateLocation", ReplyAction="http://tempuri.org/IService1/CreateLocationResponse")]
        System.Threading.Tasks.Task<int> CreateLocationAsync(string name, string address, string details, string type, string images, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLastLocation", ReplyAction="http://tempuri.org/IService1/GetLastLocationResponse")]
        Tobloggo.MyDBServiceReference.Location GetLastLocation(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLastLocation", ReplyAction="http://tempuri.org/IService1/GetLastLocationResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location> GetLastLocationAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLocationById", ReplyAction="http://tempuri.org/IService1/GetLocationByIdResponse")]
        Tobloggo.MyDBServiceReference.Location GetLocationById(int locaid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLocationById", ReplyAction="http://tempuri.org/IService1/GetLocationByIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location> GetLocationByIdAsync(int locaid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateTicket", ReplyAction="http://tempuri.org/IService1/CreateTicketResponse")]
        int CreateTicket(string name, double price, int locaid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateTicket", ReplyAction="http://tempuri.org/IService1/CreateTicketResponse")]
        System.Threading.Tasks.Task<int> CreateTicketAsync(string name, double price, int locaid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTicketById", ReplyAction="http://tempuri.org/IService1/GetTicketByIdResponse")]
        Tobloggo.MyDBServiceReference.Ticket GetTicketById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTicketById", ReplyAction="http://tempuri.org/IService1/GetTicketByIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Ticket> GetTicketByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTicketByLocaId", ReplyAction="http://tempuri.org/IService1/GetTicketByLocaIdResponse")]
        Tobloggo.MyDBServiceReference.Ticket[] GetTicketByLocaId(int locaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTicketByLocaId", ReplyAction="http://tempuri.org/IService1/GetTicketByLocaIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Ticket[]> GetTicketByLocaIdAsync(int locaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTicketAmt", ReplyAction="http://tempuri.org/IService1/UpdateTicketAmtResponse")]
        int UpdateTicketAmt(int id, int soldAmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTicketAmt", ReplyAction="http://tempuri.org/IService1/UpdateTicketAmtResponse")]
        System.Threading.Tasks.Task<int> UpdateTicketAmtAsync(int id, int soldAmt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreatePurchasedTicket", ReplyAction="http://tempuri.org/IService1/CreatePurchasedTicketResponse")]
        int CreatePurchasedTicket(int quantity, int ticketid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreatePurchasedTicket", ReplyAction="http://tempuri.org/IService1/CreatePurchasedTicketResponse")]
        System.Threading.Tasks.Task<int> CreatePurchasedTicketAsync(int quantity, int ticketid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPurchasedTicketsByUserId", ReplyAction="http://tempuri.org/IService1/GetPurchasedTicketsByUserIdResponse")]
        Tobloggo.MyDBServiceReference.PurchasedTicket[] GetPurchasedTicketsByUserId(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPurchasedTicketsByUserId", ReplyAction="http://tempuri.org/IService1/GetPurchasedTicketsByUserIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.PurchasedTicket[]> GetPurchasedTicketsByUserIdAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePurchasedTicket", ReplyAction="http://tempuri.org/IService1/UpdatePurchasedTicketResponse")]
        int UpdatePurchasedTicket(int id, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePurchasedTicket", ReplyAction="http://tempuri.org/IService1/UpdatePurchasedTicketResponse")]
        System.Threading.Tasks.Task<int> UpdatePurchasedTicketAsync(int id, int status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Tobloggo.MyDBServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Tobloggo.MyDBServiceReference.IService1>, Tobloggo.MyDBServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Tobloggo.MyDBServiceReference.CompositeType GetDataUsingDataContract(Tobloggo.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Tobloggo.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int CreateUser(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key) {
            return base.Channel.CreateUser(name, passwordHash, passwordSalt, email, contact, iv, key);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key) {
            return base.Channel.CreateUserAsync(name, passwordHash, passwordSalt, email, contact, iv, key);
        }
        
        public int CreateOrFindSingleGoogleUser(string googleId, string name, string email) {
            return base.Channel.CreateOrFindSingleGoogleUser(googleId, name, email);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrFindSingleGoogleUserAsync(string googleId, string name, string email) {
            return base.Channel.CreateOrFindSingleGoogleUserAsync(googleId, name, email);
        }
        
        public int UpdateUser(Tobloggo.MyDBServiceReference.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(Tobloggo.MyDBServiceReference.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public Tobloggo.MyDBServiceReference.User GetUserById(string id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByIdAsync(string id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public Tobloggo.MyDBServiceReference.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public Tobloggo.MyDBServiceReference.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public Tobloggo.MyDBServiceReference.Location[] GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllLocationsAsync() {
            return base.Channel.GetAllLocationsAsync();
        }
        
        public Tobloggo.MyDBServiceReference.Location[] GetAllLocationsByUserId(int userId) {
            return base.Channel.GetAllLocationsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllLocationsByUserIdAsync(int userId) {
            return base.Channel.GetAllLocationsByUserIdAsync(userId);
        }
        
        public Tobloggo.MyDBServiceReference.Location[] GetAllAvailLocations() {
            return base.Channel.GetAllAvailLocations();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllAvailLocationsAsync() {
            return base.Channel.GetAllAvailLocationsAsync();
        }
        
        public Tobloggo.MyDBServiceReference.Location[] GetAllTypeLocations(string type) {
            return base.Channel.GetAllTypeLocations(type);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllTypeLocationsAsync(string type) {
            return base.Channel.GetAllTypeLocationsAsync(type);
        }
        
        public int CreateLocation(string name, string address, string details, string type, string images, int userid) {
            return base.Channel.CreateLocation(name, address, details, type, images, userid);
        }
        
        public System.Threading.Tasks.Task<int> CreateLocationAsync(string name, string address, string details, string type, string images, int userid) {
            return base.Channel.CreateLocationAsync(name, address, details, type, images, userid);
        }
        
        public Tobloggo.MyDBServiceReference.Location GetLastLocation(int userid) {
            return base.Channel.GetLastLocation(userid);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location> GetLastLocationAsync(int userid) {
            return base.Channel.GetLastLocationAsync(userid);
        }
        
        public Tobloggo.MyDBServiceReference.Location GetLocationById(int locaid) {
            return base.Channel.GetLocationById(locaid);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location> GetLocationByIdAsync(int locaid) {
            return base.Channel.GetLocationByIdAsync(locaid);
        }
        
        public int CreateTicket(string name, double price, int locaid) {
            return base.Channel.CreateTicket(name, price, locaid);
        }
        
        public System.Threading.Tasks.Task<int> CreateTicketAsync(string name, double price, int locaid) {
            return base.Channel.CreateTicketAsync(name, price, locaid);
        }
        
        public Tobloggo.MyDBServiceReference.Ticket GetTicketById(int id) {
            return base.Channel.GetTicketById(id);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Ticket> GetTicketByIdAsync(int id) {
            return base.Channel.GetTicketByIdAsync(id);
        }
        
        public Tobloggo.MyDBServiceReference.Ticket[] GetTicketByLocaId(int locaId) {
            return base.Channel.GetTicketByLocaId(locaId);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Ticket[]> GetTicketByLocaIdAsync(int locaId) {
            return base.Channel.GetTicketByLocaIdAsync(locaId);
        }
        
        public int UpdateTicketAmt(int id, int soldAmt) {
            return base.Channel.UpdateTicketAmt(id, soldAmt);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTicketAmtAsync(int id, int soldAmt) {
            return base.Channel.UpdateTicketAmtAsync(id, soldAmt);
        }
        
        public int CreatePurchasedTicket(int quantity, int ticketid, int userid) {
            return base.Channel.CreatePurchasedTicket(quantity, ticketid, userid);
        }
        
        public System.Threading.Tasks.Task<int> CreatePurchasedTicketAsync(int quantity, int ticketid, int userid) {
            return base.Channel.CreatePurchasedTicketAsync(quantity, ticketid, userid);
        }
        
        public Tobloggo.MyDBServiceReference.PurchasedTicket[] GetPurchasedTicketsByUserId(int userid) {
            return base.Channel.GetPurchasedTicketsByUserId(userid);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.PurchasedTicket[]> GetPurchasedTicketsByUserIdAsync(int userid) {
            return base.Channel.GetPurchasedTicketsByUserIdAsync(userid);
        }
        
        public int UpdatePurchasedTicket(int id, int status) {
            return base.Channel.UpdatePurchasedTicket(id, status);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePurchasedTicketAsync(int id, int status) {
            return base.Channel.UpdatePurchasedTicketAsync(id, status);
        }
    }
}
