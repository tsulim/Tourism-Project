//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tobloggo.MyDBServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoogleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StripeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Authorization {
            get {
                return this.AuthorizationField;
            }
            set {
                if ((this.AuthorizationField.Equals(value) != true)) {
                    this.AuthorizationField = value;
                    this.RaisePropertyChanged("Authorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoogleId {
            get {
                return this.GoogleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GoogleIdField, value) != true)) {
                    this.GoogleIdField = value;
                    this.RaisePropertyChanged("GoogleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IV {
            get {
                return this.IVField;
            }
            set {
                if ((object.ReferenceEquals(this.IVField, value) != true)) {
                    this.IVField = value;
                    this.RaisePropertyChanged("IV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfImage {
            get {
                return this.ProfImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfImageField, value) != true)) {
                    this.ProfImageField = value;
                    this.RaisePropertyChanged("ProfImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StripeId {
            get {
                return this.StripeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StripeIdField, value) != true)) {
                    this.StripeIdField = value;
                    this.RaisePropertyChanged("StripeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EEndDate {
            get {
                return this.EEndDateField;
            }
            set {
                if ((this.EEndDateField.Equals(value) != true)) {
                    this.EEndDateField = value;
                    this.RaisePropertyChanged("EEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EStartDate {
            get {
                return this.EStartDateField;
            }
            set {
                if ((this.EStartDateField.Equals(value) != true)) {
                    this.EStartDateField = value;
                    this.RaisePropertyChanged("EStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PEndDate {
            get {
                return this.PEndDateField;
            }
            set {
                if ((this.PEndDateField.Equals(value) != true)) {
                    this.PEndDateField = value;
                    this.RaisePropertyChanged("PEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PStartDate {
            get {
                return this.PStartDateField;
            }
            set {
                if ((this.PStartDateField.Equals(value) != true)) {
                    this.PStartDateField = value;
                    this.RaisePropertyChanged("PStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgCreated {
            get {
                return this.ProgCreatedField;
            }
            set {
                if ((this.ProgCreatedField.Equals(value) != true)) {
                    this.ProgCreatedField = value;
                    this.RaisePropertyChanged("ProgCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventTeam", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class EventTeam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActualPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpectedPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamLeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActualPercent {
            get {
                return this.ActualPercentField;
            }
            set {
                if ((this.ActualPercentField.Equals(value) != true)) {
                    this.ActualPercentField = value;
                    this.RaisePropertyChanged("ActualPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpectedPercent {
            get {
                return this.ExpectedPercentField;
            }
            set {
                if ((this.ExpectedPercentField.Equals(value) != true)) {
                    this.ExpectedPercentField = value;
                    this.RaisePropertyChanged("ExpectedPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TEndDate {
            get {
                return this.TEndDateField;
            }
            set {
                if ((this.TEndDateField.Equals(value) != true)) {
                    this.TEndDateField = value;
                    this.RaisePropertyChanged("TEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TStartDate {
            get {
                return this.TStartDateField;
            }
            set {
                if ((this.TStartDateField.Equals(value) != true)) {
                    this.TStartDateField = value;
                    this.RaisePropertyChanged("TStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamLeader {
            get {
                return this.TeamLeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamLeaderField, value) != true)) {
                    this.TeamLeaderField = value;
                    this.RaisePropertyChanged("TeamLeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tasks", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Tasks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamIdField, value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tour", Namespace="http://schemas.datacontract.org/2004/07/DBService.Entity")]
    [System.SerializableAttribute()]
    public partial class Tour : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItineraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinPeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeField, value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Itinerary {
            get {
                return this.ItineraryField;
            }
            set {
                if ((object.ReferenceEquals(this.ItineraryField, value) != true)) {
                    this.ItineraryField = value;
                    this.RaisePropertyChanged("Itinerary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPeople {
            get {
                return this.MaxPeopleField;
            }
            set {
                if ((this.MaxPeopleField.Equals(value) != true)) {
                    this.MaxPeopleField = value;
                    this.RaisePropertyChanged("MaxPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinPeople {
            get {
                return this.MinPeopleField;
            }
            set {
                if ((this.MinPeopleField.Equals(value) != true)) {
                    this.MinPeopleField = value;
                    this.RaisePropertyChanged("MinPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDBServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Tobloggo.MyDBServiceReference.CompositeType GetDataUsingDataContract(Tobloggo.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Tobloggo.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        int CreateUser(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrFindSingleGoogleUser", ReplyAction="http://tempuri.org/IService1/CreateOrFindSingleGoogleUserResponse")]
        int CreateOrFindSingleGoogleUser(string googleId, string name, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrFindSingleGoogleUser", ReplyAction="http://tempuri.org/IService1/CreateOrFindSingleGoogleUserResponse")]
        System.Threading.Tasks.Task<int> CreateOrFindSingleGoogleUserAsync(string googleId, string name, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        int UpdateUser(Tobloggo.MyDBServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(Tobloggo.MyDBServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        Tobloggo.MyDBServiceReference.User GetUserById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByEmail", ReplyAction="http://tempuri.org/IService1/GetUserByEmailResponse")]
        Tobloggo.MyDBServiceReference.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByEmail", ReplyAction="http://tempuri.org/IService1/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        Tobloggo.MyDBServiceReference.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEvent", ReplyAction="http://tempuri.org/IService1/CreateEventResponse")]
        int CreateEvent(string name, string location, string desc, System.DateTime eStartDate, System.DateTime eEndDate, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEvent", ReplyAction="http://tempuri.org/IService1/CreateEventResponse")]
        System.Threading.Tasks.Task<int> CreateEventAsync(string name, string location, string desc, System.DateTime eStartDate, System.DateTime eEndDate, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEvent", ReplyAction="http://tempuri.org/IService1/UpdateEventResponse")]
        int UpdateEvent(Tobloggo.MyDBServiceReference.Event eventObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEvent", ReplyAction="http://tempuri.org/IService1/UpdateEventResponse")]
        System.Threading.Tasks.Task<int> UpdateEventAsync(Tobloggo.MyDBServiceReference.Event eventObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventById", ReplyAction="http://tempuri.org/IService1/GetEventByIdResponse")]
        Tobloggo.MyDBServiceReference.Event GetEventById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventById", ReplyAction="http://tempuri.org/IService1/GetEventByIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Event> GetEventByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEvents", ReplyAction="http://tempuri.org/IService1/GetAllEventsResponse")]
        Tobloggo.MyDBServiceReference.Event[] GetAllEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEvents", ReplyAction="http://tempuri.org/IService1/GetAllEventsResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Event[]> GetAllEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEventTeam", ReplyAction="http://tempuri.org/IService1/CreateEventTeamResponse")]
        Tobloggo.MyDBServiceReference.EventTeam CreateEventTeam(string teamName, string teamLeader, string contactEmail, System.DateTime tStartDate, System.DateTime tEndDate, string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEventTeam", ReplyAction="http://tempuri.org/IService1/CreateEventTeamResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.EventTeam> CreateEventTeamAsync(string teamName, string teamLeader, string contactEmail, System.DateTime tStartDate, System.DateTime tEndDate, string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEventTeam", ReplyAction="http://tempuri.org/IService1/UpdateEventTeamResponse")]
        int UpdateEventTeam(Tobloggo.MyDBServiceReference.EventTeam eventTeamObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEventTeam", ReplyAction="http://tempuri.org/IService1/UpdateEventTeamResponse")]
        System.Threading.Tasks.Task<int> UpdateEventTeamAsync(Tobloggo.MyDBServiceReference.EventTeam eventTeamObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEventTeam", ReplyAction="http://tempuri.org/IService1/DeleteEventTeamResponse")]
        int DeleteEventTeam(string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEventTeam", ReplyAction="http://tempuri.org/IService1/DeleteEventTeamResponse")]
        System.Threading.Tasks.Task<int> DeleteEventTeamAsync(string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventTeamById", ReplyAction="http://tempuri.org/IService1/GetEventTeamByIdResponse")]
        Tobloggo.MyDBServiceReference.EventTeam GetEventTeamById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventTeamById", ReplyAction="http://tempuri.org/IService1/GetEventTeamByIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.EventTeam> GetEventTeamByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEventTeamByEventId", ReplyAction="http://tempuri.org/IService1/GetAllEventTeamByEventIdResponse")]
        Tobloggo.MyDBServiceReference.EventTeam[] GetAllEventTeamByEventId(string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEventTeamByEventId", ReplyAction="http://tempuri.org/IService1/GetAllEventTeamByEventIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.EventTeam[]> GetAllEventTeamByEventIdAsync(string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEventTask", ReplyAction="http://tempuri.org/IService1/CreateEventTaskResponse")]
        int CreateEventTask(string name, string desc, double difficulty, bool completed, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEventTask", ReplyAction="http://tempuri.org/IService1/CreateEventTaskResponse")]
        System.Threading.Tasks.Task<int> CreateEventTaskAsync(string name, string desc, double difficulty, bool completed, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTask", ReplyAction="http://tempuri.org/IService1/UpdateTaskResponse")]
        int UpdateTask(Tobloggo.MyDBServiceReference.Tasks taskObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTask", ReplyAction="http://tempuri.org/IService1/UpdateTaskResponse")]
        System.Threading.Tasks.Task<int> UpdateTaskAsync(Tobloggo.MyDBServiceReference.Tasks taskObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTask", ReplyAction="http://tempuri.org/IService1/DeleteTaskResponse")]
        int DeleteTask(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTask", ReplyAction="http://tempuri.org/IService1/DeleteTaskResponse")]
        System.Threading.Tasks.Task<int> DeleteTaskAsync(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTaskByEventTeamId", ReplyAction="http://tempuri.org/IService1/GetAllTaskByEventTeamIdResponse")]
        Tobloggo.MyDBServiceReference.Tasks[] GetAllTaskByEventTeamId(string eventTeamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTaskByEventTeamId", ReplyAction="http://tempuri.org/IService1/GetAllTaskByEventTeamIdResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Tasks[]> GetAllTaskByEventTeamIdAsync(string eventTeamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLocations", ReplyAction="http://tempuri.org/IService1/GetAllLocationsResponse")]
        Tobloggo.MyDBServiceReference.Location[] GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLocations", ReplyAction="http://tempuri.org/IService1/GetAllLocationsResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateLocation", ReplyAction="http://tempuri.org/IService1/CreateLocationResponse")]
        int CreateLocation(string name, string address, string type, string images, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateLocation", ReplyAction="http://tempuri.org/IService1/CreateLocationResponse")]
        System.Threading.Tasks.Task<int> CreateLocationAsync(string name, string address, string type, string images, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLastLocation", ReplyAction="http://tempuri.org/IService1/GetLastLocationResponse")]
        Tobloggo.MyDBServiceReference.Location GetLastLocation(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLastLocation", ReplyAction="http://tempuri.org/IService1/GetLastLocationResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location> GetLastLocationAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateTicket", ReplyAction="http://tempuri.org/IService1/CreateTicketResponse")]
        int CreateTicket(string name, double price, int locaid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateTicket", ReplyAction="http://tempuri.org/IService1/CreateTicketResponse")]
        System.Threading.Tasks.Task<int> CreateTicketAsync(string name, double price, int locaid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTour", ReplyAction="http://tempuri.org/IService1/GetAllTourResponse")]
        Tobloggo.MyDBServiceReference.Tour[] GetAllTour();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTour", ReplyAction="http://tempuri.org/IService1/GetAllTourResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Tour[]> GetAllTourAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTourByTitle", ReplyAction="http://tempuri.org/IService1/GetTourByTitleResponse")]
        Tobloggo.MyDBServiceReference.Tour GetTourByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTourByTitle", ReplyAction="http://tempuri.org/IService1/GetTourByTitleResponse")]
        System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Tour> GetTourByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateTour", ReplyAction="http://tempuri.org/IService1/CreateTourResponse")]
        int CreateTour(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateTour", ReplyAction="http://tempuri.org/IService1/CreateTourResponse")]
        System.Threading.Tasks.Task<int> CreateTourAsync(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTour", ReplyAction="http://tempuri.org/IService1/UpdateTourResponse")]
        int UpdateTour(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTour", ReplyAction="http://tempuri.org/IService1/UpdateTourResponse")]
        System.Threading.Tasks.Task<int> UpdateTourAsync(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Tobloggo.MyDBServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Tobloggo.MyDBServiceReference.IService1>, Tobloggo.MyDBServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Tobloggo.MyDBServiceReference.CompositeType GetDataUsingDataContract(Tobloggo.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Tobloggo.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int CreateUser(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key) {
            return base.Channel.CreateUser(name, passwordHash, passwordSalt, email, contact, iv, key);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(string name, string passwordHash, string passwordSalt, string email, string contact, string iv, string key) {
            return base.Channel.CreateUserAsync(name, passwordHash, passwordSalt, email, contact, iv, key);
        }
        
        public int CreateOrFindSingleGoogleUser(string googleId, string name, string email) {
            return base.Channel.CreateOrFindSingleGoogleUser(googleId, name, email);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrFindSingleGoogleUserAsync(string googleId, string name, string email) {
            return base.Channel.CreateOrFindSingleGoogleUserAsync(googleId, name, email);
        }
        
        public int UpdateUser(Tobloggo.MyDBServiceReference.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(Tobloggo.MyDBServiceReference.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public Tobloggo.MyDBServiceReference.User GetUserById(string id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByIdAsync(string id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public Tobloggo.MyDBServiceReference.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public Tobloggo.MyDBServiceReference.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int CreateEvent(string name, string location, string desc, System.DateTime eStartDate, System.DateTime eEndDate, string userId) {
            return base.Channel.CreateEvent(name, location, desc, eStartDate, eEndDate, userId);
        }
        
        public System.Threading.Tasks.Task<int> CreateEventAsync(string name, string location, string desc, System.DateTime eStartDate, System.DateTime eEndDate, string userId) {
            return base.Channel.CreateEventAsync(name, location, desc, eStartDate, eEndDate, userId);
        }
        
        public int UpdateEvent(Tobloggo.MyDBServiceReference.Event eventObj) {
            return base.Channel.UpdateEvent(eventObj);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEventAsync(Tobloggo.MyDBServiceReference.Event eventObj) {
            return base.Channel.UpdateEventAsync(eventObj);
        }
        
        public Tobloggo.MyDBServiceReference.Event GetEventById(string id) {
            return base.Channel.GetEventById(id);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Event> GetEventByIdAsync(string id) {
            return base.Channel.GetEventByIdAsync(id);
        }
        
        public Tobloggo.MyDBServiceReference.Event[] GetAllEvents() {
            return base.Channel.GetAllEvents();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Event[]> GetAllEventsAsync() {
            return base.Channel.GetAllEventsAsync();
        }
        
        public Tobloggo.MyDBServiceReference.EventTeam CreateEventTeam(string teamName, string teamLeader, string contactEmail, System.DateTime tStartDate, System.DateTime tEndDate, string eventId) {
            return base.Channel.CreateEventTeam(teamName, teamLeader, contactEmail, tStartDate, tEndDate, eventId);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.EventTeam> CreateEventTeamAsync(string teamName, string teamLeader, string contactEmail, System.DateTime tStartDate, System.DateTime tEndDate, string eventId) {
            return base.Channel.CreateEventTeamAsync(teamName, teamLeader, contactEmail, tStartDate, tEndDate, eventId);
        }
        
        public int UpdateEventTeam(Tobloggo.MyDBServiceReference.EventTeam eventTeamObj) {
            return base.Channel.UpdateEventTeam(eventTeamObj);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEventTeamAsync(Tobloggo.MyDBServiceReference.EventTeam eventTeamObj) {
            return base.Channel.UpdateEventTeamAsync(eventTeamObj);
        }
        
        public int DeleteEventTeam(string teamId) {
            return base.Channel.DeleteEventTeam(teamId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteEventTeamAsync(string teamId) {
            return base.Channel.DeleteEventTeamAsync(teamId);
        }
        
        public Tobloggo.MyDBServiceReference.EventTeam GetEventTeamById(string id) {
            return base.Channel.GetEventTeamById(id);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.EventTeam> GetEventTeamByIdAsync(string id) {
            return base.Channel.GetEventTeamByIdAsync(id);
        }
        
        public Tobloggo.MyDBServiceReference.EventTeam[] GetAllEventTeamByEventId(string eventId) {
            return base.Channel.GetAllEventTeamByEventId(eventId);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.EventTeam[]> GetAllEventTeamByEventIdAsync(string eventId) {
            return base.Channel.GetAllEventTeamByEventIdAsync(eventId);
        }
        
        public int CreateEventTask(string name, string desc, double difficulty, bool completed, string teamId) {
            return base.Channel.CreateEventTask(name, desc, difficulty, completed, teamId);
        }
        
        public System.Threading.Tasks.Task<int> CreateEventTaskAsync(string name, string desc, double difficulty, bool completed, string teamId) {
            return base.Channel.CreateEventTaskAsync(name, desc, difficulty, completed, teamId);
        }
        
        public int UpdateTask(Tobloggo.MyDBServiceReference.Tasks taskObj) {
            return base.Channel.UpdateTask(taskObj);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTaskAsync(Tobloggo.MyDBServiceReference.Tasks taskObj) {
            return base.Channel.UpdateTaskAsync(taskObj);
        }
        
        public int DeleteTask(string taskId) {
            return base.Channel.DeleteTask(taskId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTaskAsync(string taskId) {
            return base.Channel.DeleteTaskAsync(taskId);
        }
        
        public Tobloggo.MyDBServiceReference.Tasks[] GetAllTaskByEventTeamId(string eventTeamId) {
            return base.Channel.GetAllTaskByEventTeamId(eventTeamId);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Tasks[]> GetAllTaskByEventTeamIdAsync(string eventTeamId) {
            return base.Channel.GetAllTaskByEventTeamIdAsync(eventTeamId);
        }
        
        public Tobloggo.MyDBServiceReference.Location[] GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location[]> GetAllLocationsAsync() {
            return base.Channel.GetAllLocationsAsync();
        }
        
        public int CreateLocation(string name, string address, string type, string images, int userid) {
            return base.Channel.CreateLocation(name, address, type, images, userid);
        }
        
        public System.Threading.Tasks.Task<int> CreateLocationAsync(string name, string address, string type, string images, int userid) {
            return base.Channel.CreateLocationAsync(name, address, type, images, userid);
        }
        
        public Tobloggo.MyDBServiceReference.Location GetLastLocation(int userid) {
            return base.Channel.GetLastLocation(userid);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Location> GetLastLocationAsync(int userid) {
            return base.Channel.GetLastLocationAsync(userid);
        }
        
        public int CreateTicket(string name, double price, int locaid) {
            return base.Channel.CreateTicket(name, price, locaid);
        }
        
        public System.Threading.Tasks.Task<int> CreateTicketAsync(string name, double price, int locaid) {
            return base.Channel.CreateTicketAsync(name, price, locaid);
        }
        
        public Tobloggo.MyDBServiceReference.Tour[] GetAllTour() {
            return base.Channel.GetAllTour();
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Tour[]> GetAllTourAsync() {
            return base.Channel.GetAllTourAsync();
        }
        
        public Tobloggo.MyDBServiceReference.Tour GetTourByTitle(string title) {
            return base.Channel.GetTourByTitle(title);
        }
        
        public System.Threading.Tasks.Task<Tobloggo.MyDBServiceReference.Tour> GetTourByTitleAsync(string title) {
            return base.Channel.GetTourByTitleAsync(title);
        }
        
        public int CreateTour(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti) {
            return base.Channel.CreateTour(title, image, details, dateTime, price, minPpl, maxPpl, iti);
        }
        
        public System.Threading.Tasks.Task<int> CreateTourAsync(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti) {
            return base.Channel.CreateTourAsync(title, image, details, dateTime, price, minPpl, maxPpl, iti);
        }
        
        public int UpdateTour(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti) {
            return base.Channel.UpdateTour(title, image, details, dateTime, price, minPpl, maxPpl, iti);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTourAsync(string title, string image, string details, string dateTime, double price, int minPpl, int maxPpl, string iti) {
            return base.Channel.UpdateTourAsync(title, image, details, dateTime, price, minPpl, maxPpl, iti);
        }
    }
}
